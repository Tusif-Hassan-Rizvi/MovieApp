{"version":3,"sources":["components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","App","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","inputdata","setInputdata","_useState5","_useState6","getdata","setGetdata","useEffect","fetch","concat","method","headers","X-RapidAPI-Key","process","X-RapidAPI-Host","then","response","json","results","catch","err","console","error","Fragment","type","placeholder","value","onChange","event","target","onClick","preventDefault","log","map","item","index","key","src","image","alt","titleOriginal","rating","countries","val","name","release","embedUrls","downlink","href","url","server","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,IACpB,OAEQC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAQ,aC+EnBC,MA7Ef,WAAe,IAAAC,EACWC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAAAK,EACcN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACAV,mBAAS,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA8B1B,OAjBAG,oBAAU,WASRC,MAAK,uDAAAC,OAAwDR,GAR7C,CACdS,OAAQ,MACRC,QAAS,CACPC,iBAAkBC,qDAClBC,kBAAmB,gCAKpBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJV,EAAWU,EAASE,WAErBC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MAC7B,CAACnB,IAGFd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KAEEpC,EAAAC,EAAAC,cAACH,EAAM,MAGPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SAAOmC,KAAK,SAASC,YAAY,gCAAgCC,MAAO7B,EAAM8B,SAnC/D,SAACC,GACpB9B,EAAQ8B,EAAMC,OAAOH,UAmCjBvC,EAAAC,EAAAC,cAAA,UAAQyC,QAhCM,SAACF,GACnBA,EAAMG,iBACN7B,EAAaL,GACbwB,QAAQW,IAAI/B,KA6BqB,WAK/Bd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXe,EAAQ4B,IAAI,SAACC,EAAKC,GAAK,OACrBhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDAAqD8C,IAAKD,GACvEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ+C,IAAKH,EAAKI,MAAOC,IAAI,eAC5CpD,EAAAC,EAAAC,cAAA,WAAM6C,EAAKM,eAEXrD,EAAAC,EAAAC,cAAA,WAAM6C,EAAKO,OAAM,SACjBtD,EAAAC,EAAAC,cAAA,WACG6C,EAAKQ,UAAUT,IAAI,SAACU,EAAIR,GAAK,OAC5BhD,EAAAC,EAAAC,cAAA,QAAM+C,IAAKD,GAAQQ,EAAIC,KAAI,QAG/BzD,EAAAC,EAAAC,cAAA,WACG6C,EAAKW,SAER1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZ4C,EAAKY,UAAUb,IAAI,SAACc,EAAUZ,GAAK,OAClChD,EAAAC,EAAAC,cAAA,KAAG2D,KAAMD,EAASE,IAAK3D,UAAU,QAAQuC,OAAQ,SAAUO,IAAKD,GAAQY,EAASG,kBC5DtFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAxC,KAAAuC,EAAAE,KAAA,UAAqBzC,KAAK,SAAA0C,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhF,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,WAAU,KACfjF,EAAAC,EAAAC,cAACgF,EAAG,QAORlB","file":"static/js/main.a000b409.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n  \r\n            <h1 className=\"header\">MovieData</h1>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\n\n\n\nfunction App() {\n  const [data, setData] = useState('')\n  const [inputdata, setInputdata] = useState('')\n  const [getdata, setGetdata] = useState([])\n\n  const HandleChange = (event) => {\n    setData(event.target.value)\n  }\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    setInputdata(data)\n    console.log(inputdata)\n  }\n\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': process.env.REACT_APP_MOVIE_API,\n        'X-RapidAPI-Host': 'movies-app1.p.rapidapi.com'\n      }\n    };\n\n    fetch(`https://movies-app1.p.rapidapi.com/api/movies?query=${inputdata}`, options)\n      .then(response => response.json())\n      .then(response => {\n        setGetdata(response.results)\n      })\n      .catch(err => console.error(err));\n  }, [inputdata])\n\n  return (\n    <>\n      {/* header */}\n      <Header></Header>\n\n      {/* inputbox */}\n      <div className=\"inputbox\">\n        <input type=\"search\" placeholder=\"Type movie name here ex: lucy\" value={data} onChange={HandleChange} />\n        <button onClick={handleClick}>Search</button>\n      </div>\n\n\n      {/* moviedatabox */}\n      <div className='container data-box' >\n        <div className='row'>\n          {\n            getdata.map((item,index) =>\n              <div className='col-xl-2 col-lg-4 col-md-6 col-sm-12 main-data-box' key={index}>\n                <img className='image' src={item.image} alt=\"movieImage\"/>\n                <div>{item.titleOriginal\n                }</div>\n                <div>{item.rating} IMDb</div>\n                <div>\n                  {item.countries.map((val,index) =>\n                    <span key={index}>{val.name} </span>\n                  )}\n                </div>\n                <div>\n                  {item.release}\n                </div>\n                <div className='stream-link'>\n                  {item.embedUrls.map((downlink, index) =>\n                    <a href={downlink.url} className=\"links\" target={'_blank'} key={index}>{downlink.server}</a>\n                  )}\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}